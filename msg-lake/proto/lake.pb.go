// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: proto/lake.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PubSubReqType int32

const (
	PubSubReqType_PUB_SUB_REQ_TYPE_UNSPECIFIED PubSubReqType = 0
	PubSubReqType_PUB_SUB_REQ_TYPE_PUBLISH     PubSubReqType = 1
	PubSubReqType_PUB_SUB_REQ_TYPE_SUBSCRIBE   PubSubReqType = 2
)

// Enum value maps for PubSubReqType.
var (
	PubSubReqType_name = map[int32]string{
		0: "PUB_SUB_REQ_TYPE_UNSPECIFIED",
		1: "PUB_SUB_REQ_TYPE_PUBLISH",
		2: "PUB_SUB_REQ_TYPE_SUBSCRIBE",
	}
	PubSubReqType_value = map[string]int32{
		"PUB_SUB_REQ_TYPE_UNSPECIFIED": 0,
		"PUB_SUB_REQ_TYPE_PUBLISH":     1,
		"PUB_SUB_REQ_TYPE_SUBSCRIBE":   2,
	}
)

func (x PubSubReqType) Enum() *PubSubReqType {
	p := new(PubSubReqType)
	*p = x
	return p
}

func (x PubSubReqType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PubSubReqType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_lake_proto_enumTypes[0].Descriptor()
}

func (PubSubReqType) Type() protoreflect.EnumType {
	return &file_proto_lake_proto_enumTypes[0]
}

func (x PubSubReqType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PubSubReqType.Descriptor instead.
func (PubSubReqType) EnumDescriptor() ([]byte, []int) {
	return file_proto_lake_proto_rawDescGZIP(), []int{0}
}

type PubSubResType int32

const (
	PubSubResType_PUB_SUB_RES_TYPE_UNSPECIFIED PubSubResType = 0
	PubSubResType_PUB_SUB_RES_TYPE_PUBLISH     PubSubResType = 1
	PubSubResType_PUB_SUB_RES_TYPE_SUBSCRIBE   PubSubResType = 2
)

// Enum value maps for PubSubResType.
var (
	PubSubResType_name = map[int32]string{
		0: "PUB_SUB_RES_TYPE_UNSPECIFIED",
		1: "PUB_SUB_RES_TYPE_PUBLISH",
		2: "PUB_SUB_RES_TYPE_SUBSCRIBE",
	}
	PubSubResType_value = map[string]int32{
		"PUB_SUB_RES_TYPE_UNSPECIFIED": 0,
		"PUB_SUB_RES_TYPE_PUBLISH":     1,
		"PUB_SUB_RES_TYPE_SUBSCRIBE":   2,
	}
)

func (x PubSubResType) Enum() *PubSubResType {
	p := new(PubSubResType)
	*p = x
	return p
}

func (x PubSubResType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PubSubResType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_lake_proto_enumTypes[1].Descriptor()
}

func (PubSubResType) Type() protoreflect.EnumType {
	return &file_proto_lake_proto_enumTypes[1]
}

func (x PubSubResType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PubSubResType.Descriptor instead.
func (PubSubResType) EnumDescriptor() ([]byte, []int) {
	return file_proto_lake_proto_rawDescGZIP(), []int{1}
}

type PubSubReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       PubSubReqType `protobuf:"varint,1,opt,name=type,proto3,enum=PubSubReqType" json:"type,omitempty"`
	TopicId    string        `protobuf:"bytes,2,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	MsgCapsule *MsgCapsule   `protobuf:"bytes,3,opt,name=msg_capsule,json=msgCapsule,proto3" json:"msg_capsule,omitempty"`
}

func (x *PubSubReq) Reset() {
	*x = PubSubReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lake_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PubSubReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubSubReq) ProtoMessage() {}

func (x *PubSubReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lake_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubSubReq.ProtoReflect.Descriptor instead.
func (*PubSubReq) Descriptor() ([]byte, []int) {
	return file_proto_lake_proto_rawDescGZIP(), []int{0}
}

func (x *PubSubReq) GetType() PubSubReqType {
	if x != nil {
		return x.Type
	}
	return PubSubReqType_PUB_SUB_REQ_TYPE_UNSPECIFIED
}

func (x *PubSubReq) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

func (x *PubSubReq) GetMsgCapsule() *MsgCapsule {
	if x != nil {
		return x.MsgCapsule
	}
	return nil
}

type PubSubRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       PubSubResType `protobuf:"varint,1,opt,name=type,proto3,enum=PubSubResType" json:"type,omitempty"`
	Ok         bool          `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`
	TopicId    string        `protobuf:"bytes,3,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	MsgCapsule *MsgCapsule   `protobuf:"bytes,4,opt,name=msg_capsule,json=msgCapsule,proto3" json:"msg_capsule,omitempty"`
}

func (x *PubSubRes) Reset() {
	*x = PubSubRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lake_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PubSubRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubSubRes) ProtoMessage() {}

func (x *PubSubRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lake_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubSubRes.ProtoReflect.Descriptor instead.
func (*PubSubRes) Descriptor() ([]byte, []int) {
	return file_proto_lake_proto_rawDescGZIP(), []int{1}
}

func (x *PubSubRes) GetType() PubSubResType {
	if x != nil {
		return x.Type
	}
	return PubSubResType_PUB_SUB_RES_TYPE_UNSPECIFIED
}

func (x *PubSubRes) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *PubSubRes) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

func (x *PubSubRes) GetMsgCapsule() *MsgCapsule {
	if x != nil {
		return x.MsgCapsule
	}
	return nil
}

var File_proto_lake_proto protoreflect.FileDescriptor

var file_proto_lake_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x61, 0x6b, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x78, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x53, 0x75, 0x62, 0x52, 0x65, 0x71,
	0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e,
	0x2e, 0x50, 0x75, 0x62, 0x53, 0x75, 0x62, 0x52, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12,
	0x2c, 0x0a, 0x0b, 0x6d, 0x73, 0x67, 0x5f, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x61, 0x70, 0x73, 0x75, 0x6c,
	0x65, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x43, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x22, 0x88, 0x01,
	0x0a, 0x09, 0x50, 0x75, 0x62, 0x53, 0x75, 0x62, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x50, 0x75, 0x62, 0x53,
	0x75, 0x62, 0x52, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x0b, 0x6d, 0x73,
	0x67, 0x5f, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x52, 0x0a, 0x6d, 0x73,
	0x67, 0x43, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2a, 0x6f, 0x0a, 0x0d, 0x50, 0x75, 0x62, 0x53,
	0x75, 0x62, 0x52, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x55, 0x42,
	0x5f, 0x53, 0x55, 0x42, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x50,
	0x55, 0x42, 0x5f, 0x53, 0x55, 0x42, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x55, 0x42,
	0x5f, 0x53, 0x55, 0x42, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x55,
	0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x10, 0x02, 0x2a, 0x6f, 0x0a, 0x0d, 0x50, 0x75, 0x62,
	0x53, 0x75, 0x62, 0x52, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x55,
	0x42, 0x5f, 0x53, 0x55, 0x42, 0x5f, 0x52, 0x45, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18,
	0x50, 0x55, 0x42, 0x5f, 0x53, 0x55, 0x42, 0x5f, 0x52, 0x45, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x55,
	0x42, 0x5f, 0x53, 0x55, 0x42, 0x5f, 0x52, 0x45, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53,
	0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x10, 0x02, 0x32, 0x2c, 0x0a, 0x04, 0x4c, 0x61,
	0x6b, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x50, 0x75, 0x62, 0x53, 0x75, 0x62, 0x12, 0x0a, 0x2e, 0x50,
	0x75, 0x62, 0x53, 0x75, 0x62, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x50, 0x75, 0x62, 0x53, 0x75,
	0x62, 0x52, 0x65, 0x73, 0x28, 0x01, 0x30, 0x01, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x30, 0x6e, 0x39, 0x2f, 0x74, 0x6f, 0x79, 0x62,
	0x6f, 0x78, 0x2f, 0x6d, 0x73, 0x67, 0x2d, 0x6c, 0x61, 0x6b, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_lake_proto_rawDescOnce sync.Once
	file_proto_lake_proto_rawDescData = file_proto_lake_proto_rawDesc
)

func file_proto_lake_proto_rawDescGZIP() []byte {
	file_proto_lake_proto_rawDescOnce.Do(func() {
		file_proto_lake_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_lake_proto_rawDescData)
	})
	return file_proto_lake_proto_rawDescData
}

var file_proto_lake_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_lake_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_lake_proto_goTypes = []interface{}{
	(PubSubReqType)(0), // 0: PubSubReqType
	(PubSubResType)(0), // 1: PubSubResType
	(*PubSubReq)(nil),  // 2: PubSubReq
	(*PubSubRes)(nil),  // 3: PubSubRes
	(*MsgCapsule)(nil), // 4: MsgCapsule
}
var file_proto_lake_proto_depIdxs = []int32{
	0, // 0: PubSubReq.type:type_name -> PubSubReqType
	4, // 1: PubSubReq.msg_capsule:type_name -> MsgCapsule
	1, // 2: PubSubRes.type:type_name -> PubSubResType
	4, // 3: PubSubRes.msg_capsule:type_name -> MsgCapsule
	2, // 4: Lake.PubSub:input_type -> PubSubReq
	3, // 5: Lake.PubSub:output_type -> PubSubRes
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_lake_proto_init() }
func file_proto_lake_proto_init() {
	if File_proto_lake_proto != nil {
		return
	}
	file_proto_msg_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_lake_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PubSubReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lake_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PubSubRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_lake_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_lake_proto_goTypes,
		DependencyIndexes: file_proto_lake_proto_depIdxs,
		EnumInfos:         file_proto_lake_proto_enumTypes,
		MessageInfos:      file_proto_lake_proto_msgTypes,
	}.Build()
	File_proto_lake_proto = out.File
	file_proto_lake_proto_rawDesc = nil
	file_proto_lake_proto_goTypes = nil
	file_proto_lake_proto_depIdxs = nil
}
